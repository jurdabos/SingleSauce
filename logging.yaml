version: 1
disable_existing_loggers: false

formatters:
  standard:
    format: '%(asctime)s [%(levelname)s] %(name)s: %(message)s'
  detailed:
    format: '%(asctime)s [%(levelname)s] %(name)s [%(filename)s:%(lineno)d] %(funcName)s: %(message)s'
  json:
    class: pythonjsonlogger.jsonlogger.JsonFormatter
    format: '%(asctime)s %(levelname)s %(name)s %(filename)s %(lineno)d %(funcName)s %(message)s'

handlers:
  console:
    class: logging.StreamHandler
    level: DEBUG
    formatter: standard
    stream: ext://sys.stdout
  file:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: detailed
    filename: logs/app.log
    maxBytes: 10485760 # 10MB
    backupCount: 5
  error_file:
    class: logging.handlers.RotatingFileHandler
    level: ERROR
    formatter: detailed
    filename: logs/error.log
    maxBytes: 10485760 # 10MB
    backupCount: 5
  json_file:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: json
    filename: logs/app.json
    maxBytes: 10485760
    backupCount: 5

loggers:
  "": # root logger
    level: DEBUG
    handlers: [console, file, error_file]
    propagate: true
  app: # application logger
    level: DEBUG
    handlers: [console, file, error_file]
    propagate: false
  data: # data handling logger (e.g. ETL, database)
    level: DEBUG
    handlers: [console, file, error_file, json_file]
    propagate: false
  etl: # ETL logger
    level: DEBUG
    handlers: [console, file, error_file]
    propagate: false
  ui: # UI logger
    level: INFO
    handlers: [console, file, error_file]
    propagate: false
  access: # accessibility logger
    level: INFO
    handlers: [console, file, error_file]
    propagate: false
  user: # user related logger
    level: INFO
    handlers: [console, file, error_file]
    propagate: false
  external: # external integrations logger (e.g. Instagram API)
    level: INFO
    handlers: [console, file, error_file]
    propagate: false